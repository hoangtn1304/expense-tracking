// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using expense_tracking_api.Infrastructure;

namespace expense_tracking_api.Migrations
{
    [DbContext(typeof(ExpensesContext))]
    [Migration("20200312100618_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2");

            modelBuilder.Entity("expense_tracking_api.Domain.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Archived")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comments")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TypeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Expenses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Archived = false,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2019, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2019, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeId = 3,
                            UpdatedAt = new DateTime(2019, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1,
                            Value = 1397.64575702029m
                        },
                        new
                        {
                            Id = 2,
                            Archived = false,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2019, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2019, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeId = 2,
                            UpdatedAt = new DateTime(2019, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1,
                            Value = 976.278912497814m
                        },
                        new
                        {
                            Id = 3,
                            Archived = false,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2019, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2019, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeId = 4,
                            UpdatedAt = new DateTime(2019, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1,
                            Value = 1464.65129589879m
                        },
                        new
                        {
                            Id = 4,
                            Archived = false,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2019, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2019, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeId = 4,
                            UpdatedAt = new DateTime(2019, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1,
                            Value = 962.752318690881m
                        },
                        new
                        {
                            Id = 5,
                            Archived = false,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2019, 3, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2019, 3, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeId = 4,
                            UpdatedAt = new DateTime(2019, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1,
                            Value = 839.149465709529m
                        },
                        new
                        {
                            Id = 6,
                            Archived = false,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2019, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2019, 3, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeId = 4,
                            UpdatedAt = new DateTime(2019, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1,
                            Value = 1369.05760265377m
                        },
                        new
                        {
                            Id = 7,
                            Archived = false,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2019, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2019, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeId = 2,
                            UpdatedAt = new DateTime(2019, 4, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1,
                            Value = 350.904874201354m
                        },
                        new
                        {
                            Id = 8,
                            Archived = false,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2019, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2019, 4, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeId = 3,
                            UpdatedAt = new DateTime(2019, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1,
                            Value = 672.269969327501m
                        },
                        new
                        {
                            Id = 9,
                            Archived = false,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2019, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2019, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeId = 2,
                            UpdatedAt = new DateTime(2019, 5, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1,
                            Value = 882.588345735608m
                        },
                        new
                        {
                            Id = 10,
                            Archived = false,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2019, 5, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2019, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeId = 2,
                            UpdatedAt = new DateTime(2019, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1,
                            Value = 839.217063663163m
                        },
                        new
                        {
                            Id = 11,
                            Archived = false,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2019, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2019, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeId = 2,
                            UpdatedAt = new DateTime(2019, 6, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1,
                            Value = 1376.06823974106m
                        },
                        new
                        {
                            Id = 12,
                            Archived = false,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2019, 6, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2019, 6, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeId = 3,
                            UpdatedAt = new DateTime(2019, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1,
                            Value = 1475.49262827984m
                        },
                        new
                        {
                            Id = 13,
                            Archived = false,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2019, 7, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2019, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeId = 3,
                            UpdatedAt = new DateTime(2019, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1,
                            Value = 146.690046715871m
                        },
                        new
                        {
                            Id = 14,
                            Archived = false,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2019, 7, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2019, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeId = 3,
                            UpdatedAt = new DateTime(2019, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1,
                            Value = 682.669731174908m
                        },
                        new
                        {
                            Id = 15,
                            Archived = false,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2019, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2019, 8, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeId = 4,
                            UpdatedAt = new DateTime(2019, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1,
                            Value = 1318.55821181953m
                        },
                        new
                        {
                            Id = 16,
                            Archived = false,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2019, 8, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2019, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeId = 2,
                            UpdatedAt = new DateTime(2019, 8, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1,
                            Value = 1371.84388626918m
                        },
                        new
                        {
                            Id = 17,
                            Archived = false,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2019, 9, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2019, 9, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeId = 4,
                            UpdatedAt = new DateTime(2019, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1,
                            Value = 935.645428921862m
                        },
                        new
                        {
                            Id = 18,
                            Archived = false,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2019, 9, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2019, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeId = 3,
                            UpdatedAt = new DateTime(2019, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1,
                            Value = 1409.91363833189m
                        },
                        new
                        {
                            Id = 19,
                            Archived = false,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2019, 10, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2019, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeId = 2,
                            UpdatedAt = new DateTime(2019, 10, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1,
                            Value = 999.938646797062m
                        },
                        new
                        {
                            Id = 20,
                            Archived = false,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2019, 10, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2019, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeId = 4,
                            UpdatedAt = new DateTime(2019, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1,
                            Value = 1271.15897823645m
                        },
                        new
                        {
                            Id = 21,
                            Archived = false,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2019, 11, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2019, 11, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeId = 3,
                            UpdatedAt = new DateTime(2019, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1,
                            Value = 1285.51300628368m
                        },
                        new
                        {
                            Id = 22,
                            Archived = false,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2019, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2019, 11, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeId = 4,
                            UpdatedAt = new DateTime(2019, 11, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1,
                            Value = 1076.70254403572m
                        },
                        new
                        {
                            Id = 23,
                            Archived = false,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2019, 12, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2019, 12, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeId = 4,
                            UpdatedAt = new DateTime(2019, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1,
                            Value = 1119.4886582063m
                        },
                        new
                        {
                            Id = 24,
                            Archived = false,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2019, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2019, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeId = 2,
                            UpdatedAt = new DateTime(2019, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1,
                            Value = 967.260428921906m
                        });
                });

            modelBuilder.Entity("expense_tracking_api.Domain.ExpenseCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Archived")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Budget")
                        .HasColumnType("TEXT");

                    b.Property<string>("ColourHex")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ExpenseCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Archived = false,
                            Budget = 2000m,
                            ColourHex = "#CE93D8",
                            CreatedAt = new DateTime(2020, 3, 12, 17, 6, 17, 784, DateTimeKind.Local).AddTicks(9793),
                            Name = "General Expenses",
                            UpdatedAt = new DateTime(2020, 3, 12, 17, 6, 17, 784, DateTimeKind.Local).AddTicks(9793),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Archived = false,
                            Budget = 3000m,
                            ColourHex = "#64B5F6",
                            CreatedAt = new DateTime(2020, 3, 12, 17, 6, 17, 784, DateTimeKind.Local).AddTicks(9793),
                            Name = "Shopping",
                            UpdatedAt = new DateTime(2020, 3, 12, 17, 6, 17, 784, DateTimeKind.Local).AddTicks(9793),
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Archived = false,
                            Budget = 2500m,
                            ColourHex = "#26A69A",
                            CreatedAt = new DateTime(2020, 3, 12, 17, 6, 17, 784, DateTimeKind.Local).AddTicks(9793),
                            Name = "Utilities",
                            UpdatedAt = new DateTime(2020, 3, 12, 17, 6, 17, 784, DateTimeKind.Local).AddTicks(9793),
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Archived = false,
                            Budget = 1000m,
                            ColourHex = "#FB8C00",
                            CreatedAt = new DateTime(2020, 3, 12, 17, 6, 17, 784, DateTimeKind.Local).AddTicks(9793),
                            Name = "Travel",
                            UpdatedAt = new DateTime(2020, 3, 12, 17, 6, 17, 784, DateTimeKind.Local).AddTicks(9793),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("expense_tracking_api.Domain.ExpenseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Archived")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ExpenseTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Archived = false,
                            CreatedAt = new DateTime(2020, 3, 12, 17, 6, 17, 784, DateTimeKind.Local).AddTicks(9793),
                            Name = "Credit Card",
                            UpdatedAt = new DateTime(2020, 3, 12, 17, 6, 17, 784, DateTimeKind.Local).AddTicks(9793),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Archived = false,
                            CreatedAt = new DateTime(2020, 3, 12, 17, 6, 17, 784, DateTimeKind.Local).AddTicks(9793),
                            Name = "Debit Card",
                            UpdatedAt = new DateTime(2020, 3, 12, 17, 6, 17, 784, DateTimeKind.Local).AddTicks(9793),
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Archived = false,
                            CreatedAt = new DateTime(2020, 3, 12, 17, 6, 17, 784, DateTimeKind.Local).AddTicks(9793),
                            Name = "Cheque",
                            UpdatedAt = new DateTime(2020, 3, 12, 17, 6, 17, 784, DateTimeKind.Local).AddTicks(9793),
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Archived = false,
                            CreatedAt = new DateTime(2020, 3, 12, 17, 6, 17, 784, DateTimeKind.Local).AddTicks(9793),
                            Name = "Cash",
                            UpdatedAt = new DateTime(2020, 3, 12, 17, 6, 17, 784, DateTimeKind.Local).AddTicks(9793),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("expense_tracking_api.Domain.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("TEXT");

                    b.Property<string>("Token")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("expense_tracking_api.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Archived")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CurrencyRegionName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Hash")
                        .HasColumnType("BLOB");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Salt")
                        .HasColumnType("BLOB");

                    b.Property<string>("SystemName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("UseDarkMode")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Archived = false,
                            CreatedAt = new DateTime(2020, 3, 12, 17, 6, 17, 784, DateTimeKind.Local).AddTicks(9793),
                            CurrencyRegionName = "GB",
                            Email = "test@demo.com",
                            FirstName = "John",
                            FullName = "John Doe",
                            Hash = new byte[] { 224, 46, 239, 166, 183, 247, 85, 46, 113, 59, 177, 68, 225, 13, 137, 96, 5, 103, 133, 178, 202, 210, 168, 36, 27, 172, 3, 38, 94, 208, 147, 31, 126, 160, 160, 216, 224, 13, 86, 61, 203, 70, 36, 22, 235, 54, 54, 61, 243, 54, 223, 232, 229, 89, 151, 20, 245, 72, 125, 10, 164, 118, 243, 111 },
                            LastName = "Doe",
                            Salt = new byte[] { 242, 145, 184, 17, 205, 96, 169, 75, 182, 214, 192, 195, 132, 197, 211, 239 },
                            SystemName = "VueExpenses",
                            UpdatedAt = new DateTime(2020, 3, 12, 17, 6, 17, 784, DateTimeKind.Local).AddTicks(9793),
                            UseDarkMode = true
                        });
                });

            modelBuilder.Entity("expense_tracking_api.Domain.Expense", b =>
                {
                    b.HasOne("expense_tracking_api.Domain.ExpenseCategory", "Category")
                        .WithMany("Expenses")
                        .HasForeignKey("CategoryId");

                    b.HasOne("expense_tracking_api.Domain.ExpenseType", "Type")
                        .WithMany("Expenses")
                        .HasForeignKey("TypeId");

                    b.HasOne("expense_tracking_api.Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("expense_tracking_api.Domain.ExpenseCategory", b =>
                {
                    b.HasOne("expense_tracking_api.Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("expense_tracking_api.Domain.ExpenseType", b =>
                {
                    b.HasOne("expense_tracking_api.Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("expense_tracking_api.Domain.RefreshToken", b =>
                {
                    b.HasOne("expense_tracking_api.Domain.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
